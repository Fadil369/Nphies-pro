version: '3.8'

services:
  # Web Application
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://platform-gateway:3001
    depends_on:
      - platform-gateway
    restart: unless-stopped

  # Platform Gateway API
  platform-gateway:
    build:
      context: .
      dockerfile: services/platform-gateway/Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=file:./prod.db
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - gateway_data:/app/data
    restart: unless-stopped

  # AI Agent Service
  ai-agent:
    build:
      context: .
      dockerfile: services/claims-ai-engine/Dockerfile
    ports:
      - "8001:8001"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ENVIRONMENT=production
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./config/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - web
      - platform-gateway
      - ai-agent
    restart: unless-stopped

volumes:
  gateway_data:
  redis_data:
